import { getAsArray, get, getAsObject } from "@parameter1/base-cms-object-path";

$ const { isArray } = Array;
$ const { config } = out.global;
$ const { node, date } = input;
$ const newsletter = getAsObject(input, "newsletter");
$ const isDigital = get(input, "dpm.isDigital") || false;

<!-- load the dpm content config -->
$ const dpmConfig = config.getAsObject("dpm.content");
<!-- handle enabled content types. default to `promotion` and `text-ad` when not explicitally configured -->
$ const enabledTypes = isArray(dpmConfig.types) ? dpmConfig.types : ["promotion", "text-ad"];
<!-- dpm is enabled when `enabled` is set in the config and the current content type matches a configured type -->
<!-- $ const dpmEnabled = dpmConfig.enabled && enabledTypes.includes(node.type); -->
$ const dpmEnabled = isDigital ? false : dpmConfig.enabled;

<!-- only render when enabled -->
<if(dpmEnabled)>
  $ const position = get(input, "dpm.position") || 0;
  $ const isAd = ["promotion", "text-ad"].includes(node.type);

  <!-- Advertising (promotions, text ads) -->
  <if(isAd)>
    <!-- position|brand initials and “nl”_advertiser name_description_TXT_MMYY_sales rep initials_company id -->
    <!-- For example: 2|sinl_cynosure_intelligent_TXT_2006_PP_8809 -->
    $ const shortName = get(node, "primarySite.shortName") || get(newsletter, "site.shortName");
    $ const lcv = [
      position,
      get(node, "lineItemName")
    ].join("|");
    $ const dpm = {
      ln: get(node, "company.name") || "",
      lc: "Advertising",
      lkw: "textad",
      lcv,
    };
    <marko-newsletters-omail-dpm lc=dpm.lc lcv=dpm.lcv ln=dpm.ln lkw=dpm.lkw />
  </if>

  <!-- Editorial content -->
  <else>
    <!-- brand: get(node, "primarySite.shortName") || "", -->
    $ const isSponsored = getAsArray(node, 'labels').includes('Sponsored');
    $ const authors = getAsArray(node, "authors.edges").map(o => get(o, "node.name")).filter(o => o).join(", ");
    $ const companyName = get(node, "company.name") || "";
    $ const lcv = [
      get(node, "company.tasAdvertiserId") || "",
      node.id,
      position,
      // Strip the Editorial content name of "special characters"
      node.name.replace(/[^a-zA-Z0-9 ]/g, ''),
    ].join("|");
    $ const dpm = {
      ln: (node.type === "product") ? companyName : authors,
      lc: (isSponsored) ? "Advertising" : "Editorial",
      lkw: (isSponsored) ? "brandedContent" : node.type,
      lcv: lcv,
    };
    <marko-newsletters-omail-dpm lc=dpm.lc lcv=dpm.lcv ln=dpm.ln lkw=dpm.lkw />
  </else>
</if>
